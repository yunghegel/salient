import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        gradlePluginPortal()
    }

    classpath(ext.build,buildscript)
}


plugins {
    id 'java'
}

apply from: "$gradleHome/tests.gradle"
apply from: "$gradleHome/libraries.gradle"
apply from: "$gradleHome/dist.gradle"



ext {
    packages = [:]

}

project(":libs").subprojects.each { project ->
    packages[project.name] = ":libs:${project.name}"
}


allprojects {

    group = "$groupId"
    project.version = "$salientVersion"
    apply plugin: "com.diffplug.spotless"

    tasks.withType(Jar).configureEach {
        archiveFileName = "${rootProject.name}-$project.name.${project.version.toString()}.jar"
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    tasks.withType(KotlinCompile).configureEach {
        configure(kotlinOptions) {
            freeCompilerArgs += ['-Xcontext-receivers']
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        dependencies {
            implementation fileTree(dir: 'extern', include: ['*.jar'])
        }
    }

    ext {
        resourceDir = project(":editor").file("assets")
    }

    spotless {
        kotlin {
            // by default the target is every '.kt' and '.kts` file in the java sourcesets
            ktfmt()    // has its own section below
            ktlint()   // has its own section below
            diktat()   // has its own section below
            prettier() // has its own section below
            licenseHeader '/* (C)$YEAR */' // or licenseHeaderFile
        }
        kotlinGradle {
            target '*.gradle.kts' // default target for kotlinGradle
            ktlint() // or ktfmt() or prettier()
        }

        java {
            target 'src/**/*.java', 'test/**/*.java', 'generator/**/*.java'
            removeUnusedImports()
        }
        groovyGradle {
            target '*.gradle'
        }
    }

    test {
        testLogging {
            showStandardStreams = true
            events "passed", "skipped", "failed"
        }
    }

}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'distribution'
    apply plugin: 'kotlin'
    apply plugin: 'kotlinx-serialization'

    apply from : rootDir.path + "/gradle/dependencies.gradle"




    implement(libs.gdx_core)
    implement(libs.gdx_ext)

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        toolchain {
            languageVersion = JavaLanguageVersion.of(11)
        }
        compileJava {
            options.release = 11
            options.fork = true
            options.incremental = true
        }
        withSourcesJar()

        sourceSets.named("main") { main ->
            main.java.srcDirs = ['src']
            main.resources.srcDirs = ["$resourceDir"]
        }
        sourceSets.named("test") { test ->
            test.java.srcDirs = [ 'test' ]
            test.resources.srcDirs = [ "$resourceDir" ]
        }
    }

    kotlin {
        jvmToolchain(11)
        sourceSets.named("main") { main ->
            main.kotlin.srcDirs = ['src']
            main.resources.srcDirs = ["$resourceDir"]
        }
        sourceSets.named("test") { test ->
            test.kotlin.srcDirs = [ 'test' ]
            test.resources.srcDirs = [ "$resourceDir" ]
        }
    }

}


def launcherClass = 'org.yunghegel.salient.launcher.DesktopLauncher'







